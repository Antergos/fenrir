ToDo list for Fenrir Version 2.0 
 
General:  
- implement onScreenUpdate commands
  read highlighted text mode
- translateable
  http://www.supernifty.org/blog/2011/09/16/python-localization-made-easy/
- be more event based (vcsa sets POLLPRI)
  http://scotdoyle.com/python-epoll-howto.html
- try to make it more asynchronus
- multpible threads
 
- implement commands
  attributes_curr_char
  generic list command (convert clipboard management)
    next item
    pref item
    curr item
    first item
    last item
  
Braille Support:
  output to braille device
  virtual buffer area for scroll left/right if the line is to long for device
  print cursor in review
  print cursor in textmode  
  flush message after X seconds and show current line (review over text)
  make flush configurable
  leve review mode on typing (show current textline)  
  commands for scroll left/right
  capture input from braile
  make routing keys assignable in keyboard
  make brailleTable configurable
  tweak current commands and output
  http://mielke.cc/brltty/doc/Manual-BrlAPI/English/BrlAPI.html
  https://git.gnome.org/browse/orca/tree/src/orca/braille.py
  https://wiki.gnome.org/Attic/LSR/ScratchPad/Braille/BrlAPI 
  https://github.com/google/brailleback/blob/master/third_party/brltty/Bindings/Python/brlapi.pyx

Driver:
- implement PTY Screen driver (to use gnome-terminal and other terminal emulators)
  https://docs.python.org/3.2/library/pty.html
- ATK input driver (dont grab on graphical interface)
- BrlTTY driver
- implement speechdriver generic
- implement autodetection of plugged and removed input devices (python-pyudev) for evdev driver
  http://askubuntu.com/questions/508236/how-can-i-run-code-whenever-a-usb-device-is-unplugged-without-requiring-root

Settings:
- configuration should be overwriteable with parameter and alternative paths
- write settings
- menue for settings configuration #storm

Application Profiles
- fenrir is not able to detect the current application inside of screen.
    ps -e  -H -o pid,pgrp,ppid,tty,cmd
    http://stackoverflow.com/questions/24861351/how-to-detect-if-python-script-is-being-run-as-a-background-process/24862213
    fd = os.open("/dev/tty5", os.O_RDONLY )
    os.tcgetpgrp(fd)
- add perApplicationTrigger trigger
    per application commands
    per application onScreenChange
    per application onInput
- per application shortcuts


-----------DONE----------------
Add nice dummy drivers
